package com.example.standouternew;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import org.apache.http.client.HttpClient;
import org.apache.http.impl.client.DefaultHttpClient;
import org.json.JSONException;
import org.json.JSONObject;

import rowierm.RowItem;

import adapter.page1adapter;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.app.Activity;
import android.content.pm.ActivityInfo;
import android.graphics.PixelFormat;
import android.util.Log;
import android.view.Gravity;
import android.view.Menu;
import android.view.View;
import android.view.Window;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;




import com.example.standouternew.Standouter;//全局变量
import com.squareup.picasso.Picasso;



public class MainActivity extends Activity implements com.example.standouternew.XListView.IXListViewListener{
	private Standouter qapp;
	private XListView listView;
	private HttpClient httpclient;
	private View loadMoreView;
	private View loadMoreViewtop;
	private ProgressBar loadMorepb;
	private TextView loadmoretext;
	private ProgressBar loadMorepbtop;
	private TextView loadmoretexttop;
    private List<RowItem> rowItems;

    private JSONObject mainJson;

    private int showrowsno;
    private int totalResults;
    private page1adapter mainadapter;
    
	
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		/********************************************************************/
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		//setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_NOSENSOR);//
		//getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);//for full screnn
		setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);//
		getWindow().setFormat(PixelFormat.TRANSLUCENT);
		
		
		
		
		/********************************************************************/
		setContentView(R.layout.activity_main);
		
		
		
		qapp=(Standouter)getApplication();
		httpclient = new DefaultHttpClient(); // for port 80 requests!

		qapp.sethttpclient(httpclient);
		
	//	httpclient=null;
		
		qapp.setwebaddress("http://demostandouter.zerouno.it");
		int widthz=this.getWindowManager().getDefaultDisplay().getWidth();
	    int  heiz=this.getWindowManager().getDefaultDisplay().getHeight(); 
	    qapp.setvidth(widthz);
	    qapp.setheight(heiz);
	    
	    qapp.setememCache(false);
	    qapp.setfileCache(false);
	    
	   
	   
		FrameLayout headerlayout=(FrameLayout)this.findViewById(R.id.headerlayout);
		LinearLayout.LayoutParams flp=new LinearLayout.LayoutParams( qapp.width,qapp.width/4);
        flp.gravity=Gravity.CENTER_HORIZONTAL;
        headerlayout.setLayoutParams(flp);
        
        ImageView headerimg=(ImageView)this.findViewById(R.id.headerimg);
        FrameLayout.LayoutParams flpimg=new FrameLayout.LayoutParams( qapp.width,qapp.width/4);
        flpimg.gravity=Gravity.CENTER_HORIZONTAL;
        headerimg.setLayoutParams(flpimg);
        Picasso.with(this).load(R.drawable.standouterheader).resize(qapp.width, qapp.width/4).into(headerimg);
        
        ImageView menuleft=(ImageView)this.findViewById(R.id.imgmenuleftmain);
        flpimg=new FrameLayout.LayoutParams( qapp.width/16*3,qapp.width/4);
        flpimg.gravity=Gravity.LEFT;
        menuleft.setLayoutParams(flpimg);
        Picasso.with(this).load(R.drawable.menu).resize(qapp.width/16*3,qapp.width/4).into(menuleft);
        
        ImageView menuright=(ImageView)this.findViewById(R.id.imgmenurightmain);
        flpimg=new FrameLayout.LayoutParams(qapp.width/16*3,qapp.width/4);
        flpimg.gravity=Gravity.RIGHT;
        menuright.setLayoutParams(flpimg);
        Picasso.with(this).load(R.drawable.menu).resize(qapp.width/16*3,qapp.width/4).into(menuright);
        
         listView = (XListView) findViewById(R.id.listViewmain);  
         
         listView.setPullLoadEnable(true);
        
		 listView.setXListViewListener(this);
		 listView.setDivider(null); 
		 
		 
		Thread threadbegin= new Thread(runnablebegin);
		threadbegin.start();
        
		
		
		
	}
	
	 Runnable runnablebegin=new Runnable(){

			@Override
			public void run() {
				// TODO Auto-generated method stub
				String s=null;
				try {
					s = qapp.readFileSdcardFile("/sdcard/json.txt");
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
					//Log.i("",s);
					try {
						mainJson=new JSONObject(s);
					} catch (JSONException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				String a = null;
				try {
					a = mainJson.getString("totalResults");
				} catch (JSONException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				 Log.i("",a);

				showrowsno=10;
			   
				loadlistview();
				
				Message msg = new Message();
				showmainpage.sendMessage(msg);
				
			}
	    	   
	      
	 };
	 
	 private void loadlistview() {
		
		 
		  rowItems = new ArrayList<RowItem>();
			Log.i("","zzzzzzzzzzzzzzzzz");

		  for(int i=0;i<10;i++){
	      		String imageurl="";
				 String videowriter="";
				String videoname="";
				 int votecount=0;
				String videowiterid="";
				String videoid="";
				String videourl="";
				boolean showflag=false;

				    RowItem item = new RowItem(imageurl,videowriter,videoname,votecount,videowiterid,videoid,videourl,showflag);

				    rowItems.add(item);
	      	}
	      	mainadapter=new page1adapter(this,rowItems,this);

	 }
	 
	 private Handler showmainpage = new Handler() {
	        public void handleMessage(Message msg) {
	            super.handleMessage(msg);
	            listView.setAdapter(mainadapter);
	          //  txtCount.setText(Integer.toString(msg.getData().getInt("count", 0)));
	        }
	    };
	
	
	
	
	/****************************************listview loadmore************/

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

	@Override
	public void onRefresh() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onLoadMore() {
		// TODO Auto-generated method stub
		
	}
	/****************************************listview loadmore end************/

	
	

}
